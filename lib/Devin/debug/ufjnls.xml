<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ufjnls</name>
    </assembly>
    <members>
        <member name="T:Devin.Base">
            <summary>
            基类
            </summary>
        </member>
        <member name="F:Devin.Base.Conn4Sa">
            <summary>
            sa模式连接字符串
            </summary>
        </member>
        <member name="F:Devin.Base.Conn4Window">
            <summary>
            集成模式连接字符串
            </summary>
        </member>
        <member name="F:Devin.Base.LogDefaultPath">
            <summary>
            日志文件路径
            </summary>
        </member>
        <member name="T:Devin.AppConfig">
            <summary>
            配置管理类(machine.config)
            </summary>
            <summary>
            配置管理类(app.config[*.dll.config])
            </summary>
        </member>
        <member name="M:Devin.AppConfig.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Devin.AppConfig.GetConnStr(System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.AppConfig.GetBoolValue(System.String)">
            <summary>
            获取Bool值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.AppConfig.GetIntValue(System.String)">
            <summary>
            获取int值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.AppConfig.GetString(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的字符串类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>字符串</returns>
        </member>
        <member name="M:Devin.AppConfig.GetString(System.String,System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的字符串类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串</returns>
        </member>
        <member name="M:Devin.AppConfig.GetStringArray(System.String,System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的string[]类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="separator">分隔符</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:Devin.AppConfig.GetStringArray(System.String,System.String,System.String[])">
            <summary>
            获取配置文件中appSettings节点下指定索引键的string[]类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="separator">分隔符</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:Devin.AppConfig.getStringArray(System.String,System.String,System.Boolean,System.String[])">
            <summary>
            获取配置文件中appSettings节点下指定索引键的string[]类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="separator">分隔符</param>
            <param name="valueRequired">指定配置文件中是否必须需要配置有该名称的元素，传入False则方法返回默认值，反之抛出异常</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:Devin.AppConfig.GetInt32(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的Int类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>Int</returns>
        </member>
        <member name="M:Devin.AppConfig.GetInt32(System.String,System.Int32)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的Int类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>Int</returns>
        </member>
        <member name="M:Devin.AppConfig.getInt32(System.String,System.Nullable{System.Int32})">
            <summary>
            获取配置文件中appSettings节点下指定索引键的Int类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>Int</returns>
        </member>
        <member name="M:Devin.AppConfig.GetBoolean(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的布尔类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:Devin.AppConfig.GetBoolean(System.String,System.Boolean)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的布尔类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:Devin.AppConfig.getBoolean(System.String,System.Nullable{System.Boolean})">
            <summary>
            获取配置文件中appSettings节点下指定索引键的布尔类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:Devin.AppConfig.GetTimeSpan(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的时间间隔类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>时间间隔</returns>
        </member>
        <member name="M:Devin.AppConfig.GetTimeSpan(System.String,System.TimeSpan)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的时间间隔类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>时间间隔</returns>
        </member>
        <member name="M:Devin.AppConfig.getValue``1(System.String,System.Func{System.String,``0,System.Boolean},System.Nullable{``0})">
            <summary>
            获取配置文件appSettings集合中指定索引的值
            </summary>
            <typeparam name="T">返回值类型参数</typeparam>
            <param name="key">索引键</param>
            <param name="parseValue">将指定索引键的值转化为返回类型的值的委托方法</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Devin.AppConfig.getValue(System.String,System.Boolean,System.String)">
            <summary>
            获取配置文件appSettings集合中指定索引的值
            </summary>
            <param name="key">索引</param>
            <param name="valueRequired">指定配置文件中是否必须需要配置有该名称的元素，传入False则方法返回默认值，反之抛出异常</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串</returns>
        </member>
        <member name="P:Devin.AppConfig.configpath">
            <summary>
            配置文件路径
            </summary>
            <returns></returns>
        </member>
        <member name="P:Devin.AppConfig.config">
            <summary>
            配置文件类的实例
            </summary>
        </member>
        <member name="M:Devin.AppConfig.GetConnectionString(System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="connectionName">连接字符串名称</param>
            <returns></returns>
        </member>
        <member name="M:Devin.AppConfig.UpdateConnectionString(System.String,System.String,System.String)">
            <summary> 
            更新连接字符串(存在先删除，不存在即新建)
            </summary> 
            <param name="newName">连接字符串名称</param> 
            <param name="newConString">连接字符串内容</param> 
            <param name="newProviderName">数据提供程序名称</param> 
        </member>
        <member name="M:Devin.AppConfig.GetAppConfig(System.String)">
            <summary> 
            获取appSettings配置节的value项  
            </summary> 
            <param name="strKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:Devin.AppConfig.UpdateAppConfig(System.String,System.String)">
            <summary>  
            更新appSettings配置节的value项(存在先删除，不存在即新建)
            </summary>  
            <param name="newKey"></param>  
            <param name="newValue"></param>  
        </member>
        <member name="M:Devin.AppConfig.UpdateServiceModelConfig(System.String)">
            <summary>
            修改system.serviceModel配置节所有服务终结点的IP地址(待完善) 
            </summary>        
            <param name="serverIP"></param>
        </member>
        <member name="M:Devin.AppConfig.UpdateApplicationSettingsConfig(System.String,System.String)">
            <summary>
            修改applicationSettings中App.Properties.Settings中服务的IP地址(待完善) 
            </summary>
            <param name="configPath"></param>
            <param name="serverIP"></param>
        </member>
        <member name="T:Devin.IniConfig">
            <summary>
            配置管理类(xxx.ini)
            </summary>
        </member>
        <member name="F:Devin.IniConfig.configData">
            <summary>
            配置项字典
            </summary>
        </member>
        <member name="F:Devin.IniConfig.fullFileName">
            <summary>
            配置文件路径
            </summary>
        </member>
        <member name="M:Devin.IniConfig.#ctor(System.String)">
            <summary>
            初始化
            </summary>
            <param name="_fileName">.ini文件的绝对路径</param>
        </member>
        <member name="M:Devin.IniConfig.get(System.String)">
            <summary>
            获取配置项
            </summary>
            <param name="key">配置项名称</param>
            <returns></returns>
        </member>
        <member name="M:Devin.IniConfig.set(System.String,System.String)">
            <summary>
            设置配置项
            </summary>
            <param name="key">配置项名称</param>
            <param name="value">配置项内容</param>
        </member>
        <member name="M:Devin.IniConfig.save">
            <summary>
            保存配置项
            </summary>
        </member>
        <member name="T:Devin.Constants">
            <summary>
            常量类
            </summary>
        </member>
        <member name="T:Devin.EncrptionHelper">
            <summary>
            Encrption帮助类
            </summary>
        </member>
        <member name="M:Devin.EncrptionHelper.EncryptDES(System.String,System.String)">
            DES加密字符串
            <summary>        
            DES加密字符串        
            </summary>        
            <param name="encryptString">待加密的字符串</param>       
            <param name="encryptKey">加密密钥,要求为8位</param>        
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>        
        </member>
        <member name="M:Devin.EncrptionHelper.DecryptDES(System.String,System.String)">
            DES解密字符串
            <summary>        
            DES解密字符串        
            </summary>        
            <param name="decryptString">待解密的字符串</param>        
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>        
            <returns>解密成功返回解密后的字符串，失败返源串</returns>        
        </member>
        <member name="M:Devin.EncrptionHelper.EncryptMD5(System.String)">
            <summary>
            MD5加密字符串
            </summary>
            <param name="encryptString"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.EncrptionHelper.EncryptMD5_1(System.String)">
            <summary>
            MD5加密字符串(已过时)
            </summary>
            <param name="encryptString"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.EncrptionHelper.EncryptMD5_2(System.String)">
            <summary>
            MD5加密字符串
            </summary>
            <param name="encryptString"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.EncrptionHelper.EncryptMD5_3(System.String)">
            <summary>
            MD5加密字符串
            </summary>
            <param name="encryptString"></param>
            <returns></returns>
        </member>
        <member name="F:Devin.EncrptionHelper.RSAPublicKey">
            <summary>
            RSA公钥
            </summary>
        </member>
        <member name="F:Devin.EncrptionHelper.RSAPrivateKey">
            <summary>
            RSA私钥
            </summary>
        </member>
        <member name="M:Devin.EncrptionHelper.EncryptRSA(System.String)">
            <summary>
            RSA加密
            </summary>
            <param name="content">要加密的文本</param>
            <returns>加密后的文本</returns>
        </member>
        <member name="M:Devin.EncrptionHelper.EncryptRSA(System.String,System.String)">
            <summary>
            RSA加密
            </summary>
            <param name="publickey">公钥</param>
            <param name="content">要加密的文本</param>
            <returns>加密后的文本</returns>
        </member>
        <member name="M:Devin.EncrptionHelper.DecryptRSA(System.String)">
            <summary>
            RSA解密
            </summary>
            <param name="content">要解密的文本</param>
            <returns>解密后的文本</returns>
        </member>
        <member name="M:Devin.EncrptionHelper.DecryptRSA(System.String,System.String)">
            <summary>
            RSA解密
            </summary>
            <param name="privatekey">私钥</param>
            <param name="content">要解密的文本</param>
            <returns>解密后的文本</returns>
        </member>
        <member name="M:Devin.EncrptionHelper.MyEncode(System.String)">
            <summary>
            明源的加密函数
            </summary>
            <param name="instr">待加密的字符串</param>
            <returns>加密后的字符串</returns>
            <example>
            95938-6.707
            </example>
        </member>
        <member name="M:Devin.EncrptionHelper.MyDecode(System.String)">
            <summary>
            明源的解密函数
            </summary>
            <param name="inStr">待解密的字符串</param>
            <returns>解密后的字符串</returns>
            <example>
            6.707-95938
            </example>
        </member>
        <member name="T:Devin.DESEntity">
            <summary>
            DES实体类，仅用于DESHelper的返回
            </summary>
        </member>
        <member name="P:Devin.DESEntity.EncrptedString">
            <summary>
            加密后的字符串
            </summary>
        </member>
        <member name="P:Devin.DESEntity.keyStr">
            <summary>
            转化成字符串的Key
            </summary>
        </member>
        <member name="P:Devin.DESEntity.IVstr">
            <summary>
            转化成字符串的IV
            </summary>
        </member>
        <member name="T:Devin.DESHelper">
            <summary>
            DES加密，不需自定义KEY值，需保存加密后的字符串以及KEY和IV串
            </summary>
        </member>
        <member name="P:Devin.DESHelper.EncodingType">
            <summary>
            编码方式
            </summary>
        </member>
        <member name="P:Devin.DESHelper.keyArray">
            <summary>
            Key数组
            </summary>
        </member>
        <member name="P:Devin.DESHelper.IVArray">
            <summary>
            IV数组
            </summary>
        </member>
        <member name="M:Devin.DESHelper.#ctor">
            <summary>
            实例化EncryptionHelper对象
            </summary>
        </member>
        <member name="M:Devin.DESHelper.#ctor(System.String)">
            <summary>
            实例化EncryptionHelper对象
            </summary>
            <param name="encodeType">编码方式</param>
        </member>
        <member name="M:Devin.DESHelper.MyEncryption(System.String)">
            <summary>
            加密方法
            </summary>
            <param name="str">待加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:Devin.DESHelper.MyEncryption(System.String,System.String)">
            <summary>
            加密方法
            </summary>
            <param name="str">待加密字符串</param>
            <param name="encodeType">编码方式</param>
            <returns></returns>
        </member>
        <member name="M:Devin.DESHelper.MyDecryption(System.String,System.String,System.String)">
            <summary>
            解密方法
            </summary>
            <param name="str">待解密字符串</param>
            <param name="key">Key</param>
            <param name="iv">IV</param>
            <returns></returns>
        </member>
        <member name="M:Devin.DESHelper.StrToBytes(System.String)">
            <summary>
            将字符串编码为字节流-系统自带
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.DESHelper.BytesToStr(System.Byte[])">
            <summary>
            将字节流编码为字符串-系统自带
            </summary>
            <param name="strArray"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.DESHelper.BytesArrayToString(System.Byte[])">
            <summary>
            将字节流数组编码为字符串-数字
            </summary>
            <returns></returns>
        </member>
        <member name="M:Devin.DESHelper.StringToBytesArray(System.String)">
            <summary>
            将字符串转化为字节流数组-数字
            </summary>
            <returns></returns>
        </member>
        <member name="M:Devin.DESHelper.EncryptString(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            将一个明文的二进制流转换成一个加密的二进制流
            </summary>
            <param name="strArray">一个明文的二进制数据流，其实也就是你要加密的字符串的二进制形式的数据流</param>
            <param name="Key"></param>
            <param name="IV"></param>
            <returns>返回一个加密后是二进制数据流</returns>
            <remarks>
            加密的原料是明文字节流，TripleDES算法对字节流进行加密，返回的是加密后的字节流,同时要给定加密使用的key和IV。
            把字符串明文转换成utf-8编码的字节流。
            </remarks>
        </member>
        <member name="M:Devin.DESHelper.DecryptTextFromMemory(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            将一个加密后的二进制数据流进行解密，产生一个明文的二进制数据流
            </summary>
            <param name="EncryptedDataArray">加密后的数据流</param>
            <param name="Key"></param>
            <param name="IV"></param>
            <returns>一个已经解密的二进制流</returns>
            <remarks>
            解密操作解密上面步骤生成的密文byte[]，需要使用到加密步骤使用的同一组Key和IV。
            </remarks>
        </member>
        <member name="M:Devin.ExceptionHelper.Is``1(System.Exception)">
            <summary>
            判断异常是哪个异常类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Devin.Fetch">
            <summary>
            Fetch操作类
            </summary>
        </member>
        <member name="M:Devin.Fetch.Get(System.String)">
            <summary>
            获取Url后面的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.Fetch.Post(System.String)">
            <summary>
            获取表单Post过来的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.Fetch.GetQueryId(System.String)">
            <summary>
            获取Url后面的值，如.....aspx?productid=2将获取到"2"
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.Fetch.GetIds(System.String)">
            <summary>
            获取表单Post过来的值，如表单checkboxlist传ids:2,3,5过来，将是int[]{2,3,5}
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Devin.Fetch.GetQueryIds(System.String)" -->
        <member name="P:Devin.Fetch.CurrentUrl">
            <summary>
            获取当前页面的Url
            </summary>
        </member>
        <member name="P:Devin.Fetch.ServerDomain">
            <summary>
            获取当前页面的主域，如www.GMS.com主域是GMS.com
            </summary>
        </member>
        <member name="P:Devin.Fetch.UserIp">
            <summary>
            获取访问用户的IP
            </summary>
        </member>
        <member name="T:Devin.RegExp">
            <summary>
            常用正则匹配类
            </summary>
        </member>
        <member name="M:Devin.RegExp.IsEmail(System.String)">
            <summary>
            是否电子邮件
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsIp(System.String)">
            <summary>
            是否Ip
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsNumeric(System.String)">
            <summary>
            是否整数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsPhysicalPath(System.String)">
            <summary>
            是否绝对路径
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsRelativePath(System.String)">
            <summary>
            是否相对路径
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsSafety(System.String)">
            <summary>
            是否安全字符串，例如包含"slect insert"等注入关键字
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsUnicode(System.String)">
            <summary>
            是否为Unicode编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsUrl(System.String)">
            <summary>
            是否URL
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsIdentityCard(System.String)">
            <summary>
            是否是身份证号，验证以下3种情况:
            1、身份证号码为15位数字；
            2、身份证号码为18位数字；
            3、身份证号码为17位数字+1个字母  
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.RegExp.IsMobileNo(System.String,System.Boolean)">
            <summary>
            是否是手机号
            </summary>
            <param name="s"></param>
            <param name="isRestrict">是否按严格格式验证</param>
            <returns></returns>
        </member>
        <member name="T:Devin.SerializeHelper">
            <summary>
            序列化帮助类
            </summary>
        </member>
        <member name="M:Devin.SerializeHelper.XmlSerialize``1(``0)">
            <summary>
            将C#数据实体转化为xml数据
            </summary>
            <param name="obj">要转化的数据实体</param>
            <returns>xml格式字符串</returns>
        </member>
        <member name="M:Devin.SerializeHelper.XmlDeserialize``1(System.String)">
            <summary>
            将xml数据转化为C#数据实体
            </summary>
            <param name="json">符合xml格式的字符串</param>
            <returns>T类型的对象</returns>
        </member>
        <member name="M:Devin.SerializeHelper.JsonSerialize``1(``0)">
            <summary>
            将C#数据实体转化为JSON数据
            </summary>
            <param name="obj">要转化的数据实体</param>
            <returns>JSON格式字符串</returns>
        </member>
        <member name="M:Devin.SerializeHelper.JsonDeserialize``1(System.String)">
            <summary>
            将JSON数据转化为C#数据实体
            </summary>
            <param name="json">符合JSON格式的字符串</param>
            <returns>T类型的对象</returns>
        </member>
        <member name="T:Devin.BaseConfig">
            <summary>
            配置基类
            </summary>
        </member>
        <member name="T:Devin.TConfig">
            <summary>
            配置类
            </summary>
        </member>
        <member name="T:Devin.DbHelper">
            <summary>
            DBHelper类
            </summary>
        </member>
        <member name="T:Devin.DbTable">
            <summary>
            表结构
            </summary>
        </member>
        <member name="P:Devin.DbTable.TableName">
            <summary>
            表名称
            </summary>
        </member>
        <member name="P:Devin.DbTable.SchemaName">
            <summary>
            表的架构
            </summary>
        </member>
        <member name="P:Devin.DbTable.Rows">
            <summary>
            表的记录数
            </summary>
        </member>
        <member name="P:Devin.DbTable.HasPrimaryKey">
            <summary>
            是否含有主键
            </summary>
        </member>
        <member name="P:Devin.DbTable.Commit">
            <summary>
            表描述
            </summary>
        </member>
        <member name="T:Devin.DbColumn">
            <summary>
            表字段结构
            </summary>
        </member>
        <member name="P:Devin.DbColumn.ColumnID">
            <summary>
            字段ID
            </summary>
        </member>
        <member name="P:Devin.DbColumn.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:Devin.DbColumn.ColumnName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:Devin.DbColumn.ColumnType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:Devin.DbColumn.CSharpType">
            <summary>
            数据库类型对应的C#类型
            </summary>
        </member>
        <member name="P:Devin.DbColumn.CommonType">
            <summary>
            通用数据类型
            </summary>
        </member>
        <member name="P:Devin.DbColumn.ByteLength">
            <summary>
            字节长度
            </summary>
        </member>
        <member name="P:Devin.DbColumn.CharLength">
            <summary>
            字符长度
            </summary>
        </member>
        <member name="P:Devin.DbColumn.Scale">
            <summary>
            小数位
            </summary>
        </member>
        <member name="P:Devin.DbColumn.IsIdentity">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:Devin.DbColumn.IsNullable">
            <summary>
            是否可空
            </summary>
        </member>
        <member name="P:Devin.DbColumn.Remark">
            <summary>
            字段描述
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Devin.SqlServerDbTypeMap" -->
        <member name="M:Devin.FileOperateHelper.GetPostfixStr(System.String)">
            <summary>
            取后缀名
            </summary>
            <param name="filename">文件名</param>
            <returns>.gif|.html格式</returns>
        </member>
        <member name="M:Devin.FileOperateHelper.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="Strings">文件内容</param>
        </member>
        <member name="M:Devin.FileOperateHelper.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="Path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Devin.FileOperateHelper.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:Devin.FileOperateHelper.FileCoppy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="OrignFile">原始文件</param>
            <param name="NewFile">新文件路径</param>
        </member>
        <member name="M:Devin.FileOperateHelper.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="Path">路径</param>
        </member>
        <member name="M:Devin.FileOperateHelper.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="OrignFile">原始路径</param>
            <param name="NewFile">新路径</param>
        </member>
        <member name="M:Devin.FileOperateHelper.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="OrignFolder">当前目录</param>
            <param name="NewFloder">新目录</param>
        </member>
        <member name="M:Devin.FileOperateHelper.FolderCreate(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="Path"></param>
        </member>
        <member name="M:Devin.FileOperateHelper.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param> 
            <returns></returns>
        </member>
        <member name="M:Devin.FileOperateHelper.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:Devin.FileOperateHelper.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="Path">详细路径</param>
        </member>
        <member name="M:Devin.FileOperateHelper.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:Devin.FileOperateHelper.GetFoldAll(System.String,System.String,System.String)">
             <summary>
             获取指定文件夹下所有子目录及文件(下拉框形)
             </summary>
             <param name="Path">详细路径</param>
            <param name="DropName">下拉列表名称</param>
            <param name="tplPath">默认选择模板名称</param>
        </member>
        <member name="M:Devin.FileOperateHelper.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <param name="tplPath">默认选择模板名称</param>
            <returns></returns>
        </member>
        <member name="M:Devin.FileOperateHelper.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:Devin.FileOperateHelper.GetFileAttibe(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns></returns>
        </member>
        <member name="M:Devin.FileUpDownHelper.UpLoad">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="M:Devin.FileUpDownHelper.DownLoad">
            <summary>
            下载文件
            </summary>
        </member>
        <member name="M:Devin.FileUpDownHelper.WriteFile(System.String)">
            <summary>
            使用WriteFile下载文件  
            </summary>
            <param name="filePath">相对路径</param>
        </member>
        <member name="M:Devin.FileUpDownHelper.TransmitFile(System.String)">
            <summary>
            使用微软的TransmitFile下载文件
            </summary>
            <param name="filePath">服务器相对路径</param>
        </member>
        <member name="M:Devin.FileUpDownHelper.WriteFileBlock(System.String)">
            <summary>
            使用OutputStream.Write分块下载文件  
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Devin.FileUpDownHelper.UpLoadByControl">
            <summary>
            上传文件，使用.NET自带控件
            </summary>
        </member>
        <member name="M:Devin.FileUpDownHelper.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
            输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">;Page.Request对象</param>
            <param name="_Response">;Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
            <example>
            string FullPath=System.Web.HttpContext.Current.Server.MapPath("count.txt");
            ResponseFile(this.Request,this.Response,"count.txt",FullPath,100);
            </example>
        </member>
        <member name="T:Devin.LogHelper">
            <summary>
            日志类
            </summary>
        </member>
        <member name="M:Devin.LogHelper.WriteException(System.Exception)">
            <summary>
            记录Exception日志
            </summary>
            <param name="ex">Exception</param>
        </member>
        <member name="M:Devin.LogHelper.WriteException(System.Exception,System.String,System.Object[])">
            <summary>
            记录Exception日志，自定义信息
            </summary>
            <param name="ex">Exception</param>
            <param name="msg">自定义信息</param>
            <param name="ps"></param>
        </member>
        <member name="M:Devin.LogHelper.WriteDebug(System.String,System.Object[])">
            <summary>
            记录Debug日志
            </summary>
            <param name="msg">自定义信息</param>
            <param name="ps"></param>
        </member>
        <member name="M:Devin.LogHelper.WriteError(System.String,System.Object[])">
            <summary>
            记录Error日志
            </summary>
            <param name="msg">自定义信息</param>
            <param name="ps"></param>
        </member>
        <member name="M:Devin.LogHelper.WriteRequest(System.String,System.Object[])">
            <summary>
            记录Error日志
            </summary>
            <param name="msg">自定义信息</param>
            <param name="ps"></param>
        </member>
        <member name="F:Devin.LogHelper.defaultPath">
            <summary>
            日志文件目录 
            </summary>                
        </member>
        <member name="T:Devin.LogHelper.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:Devin.LogHelper.LogType.Error">
            <summary>
            error
            </summary>
        </member>
        <member name="F:Devin.LogHelper.LogType.Debug">
            <summary>
            debug
            </summary>
        </member>
        <member name="F:Devin.LogHelper.LogType.Exception">
            <summary>
            exception
            </summary>
        </member>
        <member name="F:Devin.LogHelper.LogType.Request">
            <summary>
            Request
            </summary>
        </member>
        <member name="M:Devin.LogHelper.MyWriteLog(System.String,System.String,Devin.LogHelper.LogType)">
            <summary>
            记录日志
            </summary>
            <param name="msg">日志内容</param>
            <param name="path">日志存放路径</param>
            <param name="logType">日志类型</param>
        </member>
        <member name="M:Devin.LogHelper.WriteFile(System.String,System.String)">
            <summary>
            写日志到文件
            </summary>
            <param name="logContext">日志内容</param>
            <param name="fullName">文件名</param>
        </member>
        <member name="M:Devin.LogHelper.CreateErrorMeg(System.Exception)">
            <summary>
            从异常类中获取日志内容
            </summary>
            <param name="ex">异常类</param>
            <returns>日志内容</returns>
        </member>
        <member name="M:Devin.LogHelper.FormatMsg(System.Exception,System.String,Devin.LogHelper.LogType,System.Object[])">
            <summary>
            格式化日志内容
            </summary>
            <param name="ex"></param>
            <param name="msg"></param>
            <param name="logtype"></param>
            <param name="ps"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.LogHelper.CreateFileName(Devin.LogHelper.LogType)">
            <summary>
            生成日志文件名
            </summary>
            <param name="logType">日志类型</param>
            <returns>日志文件名</returns>
        </member>
        <member name="T:Devin.TimeHelper">
            <summary>
            时间类
            1、SecondToMinute(int Second) 把秒转换成分钟
            </summary>
        </member>
        <member name="M:Devin.TimeHelper.GetFormatDate(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 年月日 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt">年月日分隔符</param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.TimeHelper.GetFormatTime(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 时分秒 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt"></param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:Devin.TimeHelper.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <returns></returns>
        </member>
        <member name="M:Devin.TimeHelper.GetMonthLastDate(System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="M:Devin.TimeHelper.DateDiff2(System.DateTime,System.DateTime)">
            <summary>
            获得两个日期的间隔
            </summary>
            <param name="DateTime1">日期一。</param>
            <param name="DateTime2">日期二。</param>
            <returns>日期间隔TimeSpan。</returns>
        </member>
        <member name="M:Devin.TimeHelper.FormatDate(System.DateTime,System.String)">
            <summary>
            格式化日期时间
            </summary>
            <param name="dateTime1">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:Devin.TimeHelper.GetRandomTime(System.DateTime,System.DateTime)">
            <summary>
            得到随机日期
            </summary>
            <param name="time1">起始日期</param>
            <param name="time2">结束日期</param>
            <returns>间隔日期之间的 随机日期</returns>
        </member>
        <member name="M:Devin.TimeParser.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <returns></returns>
        </member>
        <member name="M:Devin.TimeParser.GetMonthLastDate(System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="T:Devin.Rand">
            <summary>
            验证码类
            </summary>
        </member>
        <member name="M:Devin.Rand.Number(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
        </member>
        <member name="M:Devin.Rand.Number(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:Devin.Rand.Str(System.Int32)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:Devin.Rand.Str(System.Int32,System.Boolean)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:Devin.Rand.Str_char(System.Int32)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:Devin.Rand.Str_char(System.Int32,System.Boolean)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="T:Devin.SecureCodeHelper">
            <summary>
            验证图片类
            </summary>
        </member>
        <member name="P:Devin.SecureCodeHelper.Text">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:Devin.SecureCodeHelper.Image">
            <summary>
            验证码图片
            </summary>
        </member>
        <member name="M:Devin.SecureCodeHelper.Next(System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="max">最大值</param>
        </member>
        <member name="M:Devin.SecureCodeHelper.Next(System.Int32,System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Devin.SecureCodeHelper.CreateImage">
            <summary>
            绘制验证码
            </summary>
        </member>
        <member name="M:Devin.SecureCodeHelper.GetRandomColor">
            <summary>
            字体随机颜色
            </summary>
        </member>
        <member name="M:Devin.SecureCodeHelper.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高,一般为3</param>
            <param name="dPhase">波形的起始相位,取值区间[0-2*PI)</param>
        </member>
        <member name="T:Devin.SQLHelper">
            <summary>
            数据库访问类 
            </summary>
        </member>
        <member name="F:Devin.SQLHelper.connectionString">
            <summary>
            默认数据库连接字符串(app.config)
            </summary>
        </member>
        <member name="F:Devin.SQLHelper.connectionString1">
            <summary>
            默认数据库连接字符串(web.config)
            </summary>
        </member>
        <member name="F:Devin.SQLHelper.parmCache">
            <summary>
            Hashtable to store cached parameters
            用于存储缓存的参数信息
            </summary>
        </member>
        <member name="M:Devin.SQLHelper.SetConStr(System.String)">
            <summary>
            设置连接字符串值
            </summary>
            <param name="connectionStringSign">连接字符串的标识</param>
            <returns></returns>
        </member>
        <member name="M:Devin.SQLHelper.CacheParameters(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            将参数数组存入缓存中
            </summary>
            <param name="cacheKey">Key to the parameter cache(缓存参数的键)</param>
            <param name="cmdParms">an array of SqlParamters to be cached(要缓存的参数数组)</param>
        </member>
        <member name="M:Devin.SQLHelper.GetCachedParameters(System.String)">
            <summary>
            Retrieve cached parameters
            根据键值返回缓存的参数数组
            </summary>
            <param name="cacheKey">key used to lookup parameters(用来查找的键)</param>
            <returns>Cached SqlParamters array(缓存的参数数组)</returns>
        </member>
        <member name="M:Devin.SQLHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            为执行命令准备参数
            </summary>
            <param name="cmd">SqlCommand命令</param>
            <param name="conn">已经存在的数据库连接</param>
            <param name="trans">数据库事物处理</param>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">Command text，T-SQL语句 例如 Select * from Products</param>
            <param name="cmdParms">返回带参数的命令</param>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuery(System.String)">
            <summary>
            ExecteNonQuery无参数方法
            返回执行影响的行数
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuery(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecteNonQuery有参数方法
            返回执行影响的行数
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuery(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecteNonQuery基方法，使用连接字符串标识
            返回执行影响的行数
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串标识</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecteNonQuery基方法，使用数据库连接对象
            返回执行影响的行数
            </summary>
            <param name="sqlConnection">一个有效的数据库连接对象</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuerySP(System.String)">
            <summary>
            ExecteNonQuerySP无参数方法
            返回执行影响的行数
            </summary>
            <param name="cmdText">存储过程名称</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuerySP(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecteNonQuerySP有参数方法
            返回执行影响的行数
            </summary>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuerySP(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecteNonQuerySP基方法，使用连接字符串标识
            返回执行影响的行数
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串标识</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecteNonQuerySP(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecteNonQuerySP基方法，使用数据库连接对象
            返回执行影响的行数
            </summary>
            <param name="sqlConnection">一个有效的数据库连接对象</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalar(System.String)">
            <summary>
            ExecuteScalar无参数方法
            返回结果第一行第一列的值，类型为object
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <returns>返回一个对象</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteScalar有参数方法
            返回结果第一行第一列的值，类型为object
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个对象</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalar(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteScalar基方法，使用连接字符串标识
            返回结果第一行第一列的值，类型为object
            Execute a SqlCommand that returns the first column of the first record against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串标识</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteScalar基方法，使用数据库连接对象
            返回结果第一行第一列的值，类型为object
            Execute a SqlCommand that returns the first column of the first record against an existing database connection 
            using the provided parameters.
            </summary>
            <param name="sqlConnection">一个有效的数据库连接对象</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalarSP(System.String)">
            <summary>
            ExecuteScalarSP无参数方法
            返回结果第一行第一列的值，类型为object
            </summary>
            <param name="cmdText">存储过程名称</param>
            <returns>返回一个对象</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalarSP(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteScalarSP有参数方法
            返回结果第一行第一列的值，类型为object
            </summary>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个对象</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalarSP(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteScalarSP基方法，使用连接字符串标识
            返回结果第一行第一列的值，类型为object
            Execute a SqlCommand that returns the first column of the first record against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串标识</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteScalarSP(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteScalarSP基方法，使用数据库连接对象
            返回结果第一行第一列的值，类型为object
            Execute a SqlCommand that returns the first column of the first record against an existing database connection 
            using the provided parameters.
            </summary>
            <param name="sqlConnection">一个有效的数据库连接对象</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>An object that should be converted to the expected type using Convert.To{Type}</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReader(System.String)">
            <summary>
            ExecuteReader无参数方法
            返回一个结果集，类型为SqlDataReader
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteReader有参数方法
            返回一个结果集，类型为SqlDataReader
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReader(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteReader基方法，使用连接字符串标识
            返回一个结果集，类型为SqlDataReader
            Execute a SqlCommand that returns a resultset against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串标识</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteReader基方法，使用数据库连接对象
            返回一个结果集，类型为SqlDataReader
            Execute a SqlCommand that returns a resultset against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="sqlConnection">一个有效的数据库连接对象</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReaderSP(System.String)">
            <summary>
            ExecuteReaderSP无参数方法
            返回一个结果集，类型为SqlDataReader
            </summary>
            <param name="cmdText">存储过程名称</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReaderSP(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteReaderSP有参数方法
            返回一个结果集，类型为SqlDataReader
            </summary>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReaderSP(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteReaderSP基方法，使用连接字符串标识
            返回一个结果集，类型为SqlDataReader
            Execute a SqlCommand that returns a resultset against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串标识</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteReaderSP(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteReaderSP基方法，使用数据库连接对象
            返回一个结果集，类型为SqlDataReader
            Execute a SqlCommand that returns a resultset against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="sqlConnection">一个有效的数据库连接对象</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>A SqlDataReader containing the results</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSet(System.String)">
            <summary>
            ExecuteDataSet无参数方法
            返回一个结果集，类型为DataSet
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSet(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSet有参数方法
            返回一个结果集，类型为DataSet
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters"></param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSet基方法，使用连接字符串标识
            返回一个结果集，类型为DataSet
            </summary>
            <param name="connectionString">一个有效的数据库连接字符串</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSet(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSet基方法，使用数据库连接对象
            返回一个结果集，类型为DataSet
            </summary>
            <param name="connectionString">一个有效的数据库连接对象</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSetSP(System.String)">
            <summary>
            ExecuteDataSetSP无参数方法
            返回一个结果集，类型为DataSet
            </summary>
            <param name="cmdText">存储过程名称</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSetSP(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSetSP有参数方法
            返回一个结果集，类型为DataSet
            </summary>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters"></param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSetSP(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSetSP基方法，使用连接字符串标识
            返回一个结果集，类型为DataSet
            </summary>
            <param name="connectionString">一个有效的数据库连接字符串</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSetSP(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSetSP基方法，使用数据库连接对象
            返回一个结果集，类型为DataSet
            </summary>
            <param name="connectionString">一个有效的数据库连接对象</param>
            <param name="cmdText">存储过程名称</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>return a dataset</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSet(System.String,System.String,System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSet基方法，使用连接字符串标识
            返回一个结果集，类型为DataView
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串</param>
            <param name="sortExpression"></param>
            <param name="direction"></param>
            <param name="cmdType">存储过程或者T-SQL语句</param>
            <param name="cmdText">存储过程的名称或者T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns></returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteDataSet(System.Data.SqlClient.SqlConnection,System.String,System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteDataSet基方法，使用数据库连接对象
            返回一个结果集，类型为DataView
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接对象</param>
            <param name="sortExpression"></param>
            <param name="direction"></param>
            <param name="cmdType">存储过程或者T-SQL语句</param>
            <param name="cmdText">存储过程的名称或者T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns></returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTables(System.String)">
            <summary>
            ExecuteTables无参数方法
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTables(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteTables有参数方法
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTables(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteTables基方法，使用连接字符串标识
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="connecttionString">一个有效的数据库连接字符串</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTables(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteTables基方法，使用数据库连接对象
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="connecttionString">一个有效的数据库连接对象</param>
            <param name="cmdText">T-SQL语句</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTablesSP(System.String)">
            <summary>
            ExecuteTablesSP无参数方法
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="cmdText">存储过程</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTablesSP(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteTablesSP有参数方法
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="cmdText">存储过程</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTablesSP(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteTablesSP基方法，使用连接字符串标识
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="connecttionString">一个有效的数据库连接字符串</param>
            <param name="cmdText">存储过程</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.ExecuteTablesSP(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            ExecuteTablesSP基方法，使用数据库连接对象
            返回一个表集合(DataTableCollection)表示查询得到的数据集
            </summary>
            <param name="connecttionString">一个有效的数据库连接对象</param>
            <param name="cmdText">存储过程</param>
            <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
            <returns>返回一个表集合(DataTableCollection)表示查询得到的数据集</returns>
        </member>
        <member name="M:Devin.SQLHelper.Exists(System.String)">
            <summary>
            检查是否存在
            </summary>
            <param name="strSql">Sql语句</param>
            <returns>bool结果</returns>
        </member>
        <member name="M:Devin.SQLHelper.Exists(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            检查是否存在
            </summary>
            <param name="strSql">Sql语句</param>
            <param name="cmdParms">参数</param>
            <returns>bool结果</returns>
        </member>
        <member name="M:Devin.SQLHelper.Exists(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            检查是否存在
            </summary>
            <param name="connectionStringSign">一个有效的数据库连接字符串标识</param>
            <param name="strSql">Sql语句</param>
            <param name="cmdParms">参数</param>
            <returns>bool结果</returns>
        </member>
        <member name="M:Devin.SQLHelper.Exists(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            检查是否存在
            </summary>
            <param name="sqlConnection">一个有效的数据库连接对象</param>
            <param name="strSql">Sql语句</param>
            <param name="cmdParms">参数</param>
            <returns>bool结果</returns>
        </member>
        <member name="T:Devin.TESTTABLE">
            <summary>
            
            </summary>
        </member>
        <member name="P:Devin.TESTTABLE.UserID">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Devin.TESTTABLE.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Devin.TESTTABLE.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Devin.TESTTABLE.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:Devin.TESTTABLE.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="T:Devin.CacheHelper">
            <summary>
            本地缓存帮助类
            </summary>
        </member>
        <member name="M:Devin.CacheHelper.Get(System.String)">
            <summary>
            本地缓存获取
            </summary>
            <param name="name">key</param>
            <returns></returns>
        </member>
        <member name="M:Devin.CacheHelper.Remove(System.String)">
            <summary>
            本地缓存移除
            </summary>
            <param name="name">key</param>
        </member>
        <member name="M:Devin.CacheHelper.Set(System.String,System.Object)">
            <summary>
            本地缓存写入（默认缓存20min）
            </summary>
            <param name="name">key</param>
            <param name="value">value</param>
        </member>
        <member name="M:Devin.CacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            本地缓存写入（默认缓存20min）,依赖项
            </summary>
            <param name="name">key</param>
            <param name="value">value</param>
            <param name="cacheDependency">依赖项</param>
        </member>
        <member name="M:Devin.CacheHelper.Set(System.String,System.Object,System.Int32)">
            <summary>
            本地缓存写入
            </summary>
            <param name="name">key</param>
            <param name="value">value</param>
            <param name="minutes">缓存分钟</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Devin.CacheHelper.Set(System.String,System.Object,System.Int32,System.Boolean,System.Web.Caching.CacheItemRemovedCallback)" -->
        <member name="T:Devin.Utils">
            <summary>
            通用方法类
            </summary>
        </member>
        <member name="M:Devin.Utils.compareArr_1(System.Int32[],System.Int32[])">
            <summary>
            数组比较(linq方式)
            </summary>
            <param name="arr1">第一个数组</param>
            <param name="arr2">第二个数组</param>
            <returns></returns>
        </member>
        <member name="M:Devin.Utils.compareArr_2(System.Int32[],System.Int32[],System.Boolean)">
            <summary>
            数组比较(双重for循环方式)
            </summary>
            <param name="arr1">第一个数组</param>
            <param name="arr2">第二个数组</param>
            <param name="strict">是否启用严格模式(顺序和值都要求一致)</param>
            <returns></returns>
        </member>
        <member name="M:Devin.ZipHelper.Zip(System.String,System.String)">
            <summary>
            压缩文件，将指定文件夹中的文件压缩成一个指定文件名的压缩文件
            </summary>
            <param name="sourceDirectoryName">源目标文件夹</param>
            <param name="destinationArchiveFileName">目标压缩文件</param>
        </member>
        <member name="M:Devin.ZipHelper.UnZip(System.String,System.String)">
            <summary>
            解压文件，将指定的压缩文件解压到指定的文件夹
            </summary>
            <param name="sourceArchiveFileName">源压缩文件</param>
            <param name="destinationDirectoryName">目标文件夹</param>
        </member>
        <member name="M:Devin.ZipHelper.AddFileToZip">
            <summary>
            添加文件到指定的压缩文件中，待实现
            </summary>
        </member>
        <member name="M:Devin.ZipHelper.GetFileFormZip">
            <summary>
            从压缩文件中获取指定名称的文件，待实现
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.AppSettingsHelper">
            <summary>
            配置文件appSettings节点的帮助方法
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetString(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的字符串类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>字符串</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetString(System.String,System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的字符串类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetStringArray(System.String,System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的string[]类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="separator">分隔符</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetStringArray(System.String,System.String,System.String[])">
            <summary>
            获取配置文件中appSettings节点下指定索引键的string[]类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="separator">分隔符</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.getStringArray(System.String,System.String,System.Boolean,System.String[])">
            <summary>
            获取配置文件中appSettings节点下指定索引键的string[]类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="separator">分隔符</param>
            <param name="valueRequired">指定配置文件中是否必须需要配置有该名称的元素，传入False则方法返回默认值，反之抛出异常</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetInt32(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的Int类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>Int</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetInt32(System.String,System.Int32)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的Int类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>Int</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.getInt32(System.String,System.Nullable{System.Int32})">
            <summary>
            获取配置文件中appSettings节点下指定索引键的Int类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>Int</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetBoolean(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的布尔类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetBoolean(System.String,System.Boolean)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的布尔类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.getBoolean(System.String,System.Nullable{System.Boolean})">
            <summary>
            获取配置文件中appSettings节点下指定索引键的布尔类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetTimeSpan(System.String)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的时间间隔类型的的值
            </summary>
            <param name="key">索引键</param>
            <returns>时间间隔</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.GetTimeSpan(System.String,System.TimeSpan)">
            <summary>
            获取配置文件中appSettings节点下指定索引键的时间间隔类型的的值
            </summary>
            <param name="key">索引键</param>
            <param name="defaultValue">默认值</param>
            <returns>时间间隔</returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.getValue``1(System.String,System.Func{System.String,``0,System.Boolean},System.Nullable{``0})">
            <summary>
            获取配置文件appSettings集合中指定索引的值
            </summary>
            <typeparam name="T">返回值类型参数</typeparam>
            <param name="key">索引键</param>
            <param name="parseValue">将指定索引键的值转化为返回类型的值的委托方法</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.AppSettingsHelper.getValue(System.String,System.Boolean,System.String)">
            <summary>
            获取配置文件appSettings集合中指定索引的值
            </summary>
            <param name="key">索引</param>
            <param name="valueRequired">指定配置文件中是否必须需要配置有该名称的元素，传入False则方法返回默认值，反之抛出异常</param>
            <param name="defaultValue">默认值</param>
            <returns>字符串</returns>
        </member>
        <member name="T:GMS.Framework.Utility.AssemblyHelper">
            <summary>
            程序集反射辅助类
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.AssemblyHelper.GetEntryAssembly">
            <summary>
            得到入口程序集，兼容Web和Winform
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.AssemblyHelper.FindTypeByInheritType(System.Type,System.String)">
            <summary>
            扫描程序集找到继承了某基类的所有子类
            </summary>
            <param name="inheritType">基类</param>
            <param name="searchpattern">文件名过滤</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.AssemblyHelper.FindAllPropertyByAttribute``1(System.String)">
            <summary>
            扫描程序集找到带有某个Attribute的所有PropertyInfo
            </summary>
            <typeparam name="T"></typeparam>
            <param name="searchpattern">文件名过滤</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.AssemblyHelper.FindAllTypeByAttribute``1(System.String)">
            <summary>
            扫描程序集找到类型上带有某个Attribute的所有类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="searchpattern">文件名过滤</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.AssemblyHelper.FindTypeByInterface``1(System.String)">
            <summary>
            扫描程序集找到实现了某个接口的第一个实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="searchpattern">文件名过滤</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.AssemblyHelper.GetBaseDirectory">
            <summary>
            得到当前应用程序的根目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Collection.Random``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            数组或list随机选出几个
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="collection">数组或list</param>
            <param name="count">选出数量</param>
            <returns></returns>
        </member>
        <member name="T:GMS.Framework.Utility.Converter">
            <summary>
            各种值类型转换
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToInt(System.Decimal)">
            <summary>
            小数转整数，类似四舍五入
            </summary>
            <param name="value">小数</param>
            <returns>整数</returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToInt(System.Double)">
            <summary>
            double转整数，类似四舍五入
            </summary>
            <param name="value">double</param>
            <returns>整数</returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.CutOff(System.DateTime,System.Int64)">
            <summary>
            将时间精确到哪个级别
            </summary>
            <param name="dateTime"></param>
            <param name="cutTicks"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToCnDataString(System.DateTime)">
            <summary>
            把时间转换成字符串如：2013-8-2
            </summary>
            <param name="dateTime">DateTime</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToCnDataString(System.Nullable{System.DateTime})">
            <summary>
            把时间转换成字符串如：2013-8-2
            </summary>
            <param name="dateTime">DateTime</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToPrice(System.Decimal,System.String)">
            <summary>
            小数转成价格，如3.123123会转成3.12
            </summary>
            <param name="price"></param>
            <param name="format">小数位数格式</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToShortPriceRange(System.Decimal,System.Decimal)">
            <summary>
            价格区间，会转成如 200-300
            </summary>
            <param name="fromPrice"></param>
            <param name="toPrice"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToShortPrice(System.Decimal,System.Int32)">
            <summary>
            转成价格，如200.45将转成200，小于0时将转成"暂无价格"
            </summary>
            <param name="price"></param>
            <param name="decimalPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToCnDayPrice(System.Decimal,System.String)">
            <summary>
            转成价格，如"¥200/晚起"
            </summary>
            <param name="price"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToCnPrice(System.Decimal,System.String)">
            <summary>
            转成价格，如"¥200"
            </summary>
            <param name="price"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToStar(System.String,System.Int32)">
            <summary>
            人名字只留姓，后面用*填充
            </summary>
            <param name="s"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToScore(System.Double)">
            <summary>
            小数转评分，如3.6转成4，3.3转成3.5，3转成3
            </summary>
            <param name="score"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GMS.Framework.Utility.Converter.ToPriceRange(System.String)" -->
        <member name="M:GMS.Framework.Utility.Converter.ToDay(System.DateTime)">
            <summary>
            日期转当前天，跟今天比，如转成“今天”，“昨天”，不符和就转成如“2012-8-2”
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToWeek(System.String)">
            <summary>
            日期转星期几，如"星期日", "星期一"
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToInt(System.String,System.Int32)">
            <summary>
            字符串转int
            </summary>
            <param name="s"></param>
            <param name="defalut"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToBool(System.String,System.Boolean)">
            <summary>
            字符串转bool
            </summary>
            <param name="s"></param>
            <param name="defalut"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToDouble(System.String,System.Double)">
            <summary>
            字符串转double
            </summary>
            <param name="s"></param>
            <param name="defalut"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToDecimal(System.String,System.Decimal)">
            <summary>
            字符串转decimal
            </summary>
            <param name="s"></param>
            <param name="defalut"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToGuid(System.String)">
            <summary>
            字符串转GUID
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToDateTime(System.String,System.DateTime)">
            <summary>
            字符串转日期
            </summary>
            <param name="s"></param>
            <param name="defalut"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Converter.ToEnum``1(System.String)">
            <summary>
            字符串转Enum
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:GMS.Framework.Utility.Cookie">
            <summary>
            Cookie帮助类
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.Cookie.Get(System.String)">
            <summary>
            取Cookie
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Cookie.GetValue(System.String)">
            <summary>
            取Cookie值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.Cookie.Remove(System.String)">
            <summary>
            移除Cookie
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GMS.Framework.Utility.Cookie.Save(System.String,System.String,System.Int32)">
            <summary>
            保存Cookie
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="expiresHours"></param>
        </member>
        <member name="T:GMS.Framework.Utility.Diff">
            <summary>
            Diff两个字符串
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.Diff.Build(System.String,System.String,System.Boolean)">
            <summary>
            <para>toWord为真时，适合英文，将以单词为一个单位做比较，为false，将每个字符做比较，适合无html代码的纯中文</para>
            <para>请在Web显示输出时加入2个样式，参考：http://www.rohland.co.za/index.php/2009/10/31/csharp-html-diff-algorithm/ </para>
            </summary>
            <param name="oldText"></param>
            <param name="newText"></param>
            <param name="toWord"></param>
            <returns></returns>
        </member>
        <member name="T:GMS.Framework.Utility.HtmlDiff">
            <summary>
            Diff两个字符串
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.HtmlDiff.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GMS.Framework.Utility.Diff"/> class.
            </summary>
            <param name="oldText">The old text.</param>
            <param name="newText">The new text.</param>
        </member>
        <member name="M:GMS.Framework.Utility.HtmlDiff.Build">
            <summary>
            Builds the HTML diff output
            </summary>
            <returns>HTML diff markup</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GMS.Framework.Utility.HtmlDiff.InsertTag(System.String,System.String,System.Collections.Generic.List{System.String})" -->
        <member name="T:GMS.Framework.Utility.EnumHelper">
            <summary>
            枚举帮助类
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.Parse``1(System.String)">
            <summary>
            转换如："enum1,enum2,enum3"字符串到枚举值
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="obj">枚举字符串</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetEnumTitle(System.Enum,System.Enum)">
            <summary>
            根据枚举值，返回描述字符串
            如果多选枚举，返回以","分割的字符串
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetAllEnumTitle(System.Enum,System.Enum)">
            <summary>
            根据枚举值，返回描述字符串
            如果多选枚举，返回以","分割的字符串
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetTitleAndSynonyms``1(System.Enum)">
            <summary>
            返回键值对，建为枚举的EnumTitle中指定的名称和近义词名称，值为枚举项
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetItemList``1(System.Enum)">
            <summary>
            根据枚举获取包含所有所有值和描述的哈希表，其文本是由应用在枚举值上的EnumTitleAttribute设定
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetAllItemList``1(System.Enum)">
            <summary>
            根据枚举获取包含所有所有值和描述的哈希表，其文本是由应用在枚举值上的EnumTitleAttribute设定
            </summary>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetItemValueList``1(System.Enum)">
            <summary>
            获取枚举所有项的标题,其文本是由应用在枚举值上的EnumTitleAttribute设定
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="language">语言</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetItemValueList``2(System.Boolean,System.Enum)">
            <summary>
            获取枚举所有项的标题,其文本是由应用在枚举值上的EnumTitleAttribute设定
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="isAll">是否生成“全部”项</param>
            <param name="language">语言</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetAllItemValueList``2(System.Enum)">
            <summary>
            获取枚举所有项的标题,其文本是由应用在枚举值上的EnumTitleAttribute设定
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="isAll">是否生成“全部”项</param>
            <param name="language">语言</param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.EnumHelper.GetEnumDictionary``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            获取一个枚举的键值对形式
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="exceptTypes">排除的枚举</param>
            <returns></returns>
        </member>
        <member name="P:GMS.Framework.Utility.EnumTitleAttribute.Synonyms">
            <summary>
            近义词
            </summary>
        </member>
        <member name="F:GMS.Framework.Utility.FileWatchHelper.m_timer">
            <summary>
            The timer used to compress the notification events.
            </summary>
        </member>
        <member name="F:GMS.Framework.Utility.FileWatchHelper.TimeoutMillis">
            <summary>
            The default amount of time to wait after receiving notification before reloading the config file.
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.FileWatchHelper.ConfigureAndWatchHandler_OnChanged(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Event handler used by <see cref="!:ConfigureAndWatchHandler"/>.
            </summary>
            <param name="source">The <see cref="T:System.IO.FileSystemWatcher"/> firing the event.</param>
            <param name="e">The argument indicates the file that caused the event to be fired.</param>
            <remarks>
            <para>
            This handler reloads the configuration from the file when the event is fired.
            </para>
            </remarks>
        </member>
        <member name="M:GMS.Framework.Utility.FileWatchHelper.StartWatching(GMS.Framework.Utility.FileUpdate,System.String)">
            <summary>
            Start a watch
            </summary>
            <param name="updateProcess"></param>
            <param name="filePath"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:GMS.Framework.Utility.GeoHelper.GetDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            根据经纬度获取两点间距离，单位m
            </summary>
            <param name="lat1"></param>
            <param name="lng1"></param>
            <param name="lat2"></param>
            <param name="lng2"></param>
            <returns></returns>
        </member>
        <member name="T:GMS.Framework.Utility.ImagePosition">
            <summary>
            水印位置
            </summary>
        </member>
        <member name="F:GMS.Framework.Utility.ImagePosition.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:GMS.Framework.Utility.ImagePosition.LeftTop">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:GMS.Framework.Utility.ImagePosition.LeftBottom">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:GMS.Framework.Utility.ImagePosition.RightTop">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:GMS.Framework.Utility.ImagePosition.RigthBottom">
            <summary>
            右下
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ImageUtil">
            <summary>
            ImageUtil 的摘要说明。
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.ImageUtil.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.ImageUtil.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
             生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>	
            <param name="isaddwatermark">是否添加水印</param>	
            <param name="quality">图片品质</param>	
        </member>
        <member name="M:GMS.Framework.Utility.ImageUtil.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,GMS.Framework.Utility.ImagePosition,System.String,System.Int32)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>	
            <param name="isaddwatermark">是否添加水印</param>	
            <param name="quality">图片品质</param>	
            <param name="imagePosition">水印位置</param>	
            <param name="waterImage">水印图片名称</param>	
        </member>
        <member name="T:GMS.Framework.Utility.JsUtil">
            <summary>
            提供向页面输出客户端代码实现特殊功能的方法
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.JscriptSender(System.Web.UI.Page)">
            <summary>
            向客户端发送函数KendoPostBack(eventTarget, eventArgument)
            服务器端可接收__EVENTTARGET,__EVENTARGUMENT的值
            </summary>
            <param name="page">System.Web.UI.Page 一般为this</param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.Alert(System.String)">
            <summary>
            弹出JavaScript小窗口
            </summary>
            <param name="js">窗口信息</param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.GoHistory(System.Int32)">
            <summary>
            回到历史页面
            </summary>
            <param name="value">-1/1</param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.CloseWindow">
            <summary>
            关闭当前窗口
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.RefreshParent">
            <summary>
            刷新父窗口
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.JSStringFormat(System.String)">
            <summary>
            格式化为JS可解释的字符串
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.RefreshOpener">
            <summary>
            刷新打开窗口
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.OpenWebForm(System.String)">
            <summary>
            打开窗口
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.OpenWebForm(System.String,System.Boolean)">
            <summary>		
            函数名:OpenWebForm	
            功能描述:打开WEB窗口	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-04-29 17:00
            修 改:
            日 期:
            版 本:
            </summary>
            <param name="url">WEB窗口</param>
            <param name="isFullScreen">是否全屏幕</param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.JavaScriptLocationHref(System.String)">
            <summary>
            转向Url制定的页面
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.JavaScriptFrameHref(System.String,System.String)">
            <summary>
            指定的框架页面转换
            </summary>
            <param name="FrameName"></param>
            <param name="url"></param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.JavaScriptResetPage(System.String)">
             <summary>
            重置页面
             </summary>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.JavaScriptSetCookie(System.String,System.String)">
            <summary>
            函数名:JavaScriptSetCookie
            功能描述:客户端方法设置Cookie
            作者:sxs
            日期：2003-4-9
            版本：1.0
            </summary>
            <param name="strName">Cookie名</param>
            <param name="strValue">Cookie值</param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.GotoParentWindow(System.String)">
            <summary>		
            函数名:GotoParentWindow	
            功能描述:返回父窗口	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-04-30 10:00
            修 改:
            日 期:
            版 本:
            </summary>
            <param name="parentWindowUrl">父窗口</param>		
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.ReplaceParentWindow(System.String,System.String,System.String)">
            <summary>		
            函数名:ReplaceParentWindow	
            功能描述:替换父窗口	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-04-30 10:00
            修 改:
            日 期:
            版 本:
            </summary>
            <param name="parentWindowUrl">父窗口</param>
            <param name="caption">窗口提示</param>
            <param name="future">窗口特征参数</param>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.ReplaceOpenerWindow(System.String)">
            <summary>		
            函数名:ReplaceOpenerWindow	
            功能描述:替换当前窗体的打开窗口	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-04-30 16:00
            修 改:
            日 期:
            版 本:
            </summary>
            <param name="openerWindowUrl">当前窗体的打开窗口</param>		
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.ReplaceOpenerParentFrame(System.String,System.String)">
            <summary>		
            函数名:ReplaceOpenerParentWindow	
            功能描述:替换当前窗体的打开窗口的父窗口	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-07-03 19:00
            修 改:
            日 期:
            版 本:
            </summary>
            <param name="openerWindowUrl">当前窗体的打开窗口的父窗口</param>		
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.ReplaceOpenerParentWindow(System.String)">
            <summary>		
            函数名:ReplaceOpenerParentWindow	
            功能描述:替换当前窗体的打开窗口的父窗口	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-07-03 19:00
            修 改:
            日 期:
            版 本:
            </summary>
            <param name="openerWindowUrl">当前窗体的打开窗口的父窗口</param>		
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.CloseParentWindow">
            <summary>		
            函数名:CloseParentWindow	
            功能描述:关闭窗口	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-04-30 16:00
            修 改:
            日 期:
            版 本:
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.ShowModalDialogJavascript(System.String)">
            <summary>
            函数名:ShowModalDialogJavascript	
            功能描述:返回打开模式窗口的脚本	
            处理流程:
            算法描述:
            作 者: guozili
            日 期: 2003-04-30 15:00
            修 改:
            日 期:
            版 本:
            </summary>
            <param name="webFormUrl"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.JsUtil.ShowModalDialogWindow(System.String)">
            <summary>
            </summary>
            <param name="webFormUrl"></param>
            <returns></returns>
        </member>
        <member name="T:GMS.Framework.Utility.MailHelper">
            <summary>
            邮件发送帮助类
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.NetHelper">
            <summary>
            向远程Url Post/Get数据类
            </summary>
        </member>
        <member name="P:GMS.Framework.Utility.NetHelper.CNNWebClient.Timeout">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.NetHelper.CNNWebClient.GetWebRequest(System.Uri)">
            <summary>
            重写GetWebRequest,添加WebRequest对象超时时间
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.PermutationAndCombination`1.Swap(`0@,`0@)">
            <summary>
            交换两个变量
            </summary>
            <param name="a">变量1</param>
            <param name="b">变量2</param>
        </member>
        <member name="M:GMS.Framework.Utility.PermutationAndCombination`1.GetCombination(System.Collections.Generic.List{`0[]}@,`0[],System.Int32,System.Int32,System.Int32[],System.Int32)">
            <summary>
            递归算法求数组的组合(私有成员)
            </summary>
            <param name="list">返回的范型</param>
            <param name="t">所求数组</param>
            <param name="n">辅助变量</param>
            <param name="m">辅助变量</param>
            <param name="b">辅助数组</param>
            <param name="M">辅助变量M</param>
        </member>
        <member name="M:GMS.Framework.Utility.PermutationAndCombination`1.GetPermutation(System.Collections.Generic.List{`0[]}@,`0[],System.Int32,System.Int32)">
            <summary>
            递归算法求排列(私有成员)
            </summary>
            <param name="list">返回的列表</param>
            <param name="t">所求数组</param>
            <param name="startIndex">起始标号</param>
            <param name="endIndex">结束标号</param>
        </member>
        <member name="M:GMS.Framework.Utility.PermutationAndCombination`1.GetPermutation(`0[],System.Int32,System.Int32)">
            <summary>
            求从起始标号到结束标号的排列，其余元素不变
            </summary>
            <param name="t">所求数组</param>
            <param name="startIndex">起始标号</param>
            <param name="endIndex">结束标号</param>
            <returns>从起始标号到结束标号排列的范型</returns>
        </member>
        <member name="M:GMS.Framework.Utility.PermutationAndCombination`1.GetPermutation(`0[])">
            <summary>
            返回数组所有元素的全排列
            </summary>
            <param name="t">所求数组</param>
            <returns>全排列的范型</returns>
        </member>
        <member name="M:GMS.Framework.Utility.PermutationAndCombination`1.GetPermutation(`0[],System.Int32)">
            <summary>
            求数组中n个元素的排列
            </summary>
            <param name="t">所求数组</param>
            <param name="n">元素个数</param>
            <returns>数组中n个元素的排列</returns>
        </member>
        <member name="M:GMS.Framework.Utility.PermutationAndCombination`1.GetCombination(`0[],System.Int32)">
            <summary>
            求数组中n个元素的组合
            </summary>
            <param name="t">所求数组</param>
            <param name="n">元素个数</param>
            <returns>数组中n个元素的组合的范型</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.XmlSerialize(System.Object,System.String)">
            <summary>
            序列化，使用标准的XmlSerializer，优先考虑使用。
            不能序列化IDictionary接口.
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.XmlDeserializeFromFile(System.Type,System.String)">
            <summary>
            反序列化，使用标准的XmlSerializer，优先考虑使用。
            不能序列化IDictionary接口.
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
            <returns>type类型的对象实例</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.SaveToBinaryBytes(System.Object)">
            <summary>
            将对象使用二进制格式序列化成byte数组
            </summary>
            <param name="obj">待保存的对象</param>
            <returns>byte数组</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.LoadFromBinaryBytes(System.Byte[])">
            <summary>
            将使用二进制格式保存的byte数组反序列化成对象
            </summary>
            <param name="bytes">byte数组</param>
            <returns>对象</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.SaveToMemoryStream(System.Object)">
            <summary>
            使用BinaryFormatter将对象系列化到MemoryStream中。
            </summary>
            <param name="obj">对象</param>
            <returns>保存对象的MemoryStream</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.JsonSerialize``1(``0)">
            <summary>
            将C#数据实体转化为JSON数据
            </summary>
            <param name="obj">要转化的数据实体</param>
            <returns>JSON格式字符串</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.JsonSerialize(System.Object,System.Text.Encoding)">
            <summary>
            将C#数据实体转化为JSON数据
            </summary>
            <param name="obj">要转化的数据实体</param>
            <returns>JSON格式字符串</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.JsonDeserialize``1(System.String)">
            <summary>
            将JSON数据转化为C#数据实体
            </summary>
            <param name="json">符合JSON格式的字符串</param>
            <returns>T类型的对象</returns>
        </member>
        <member name="M:GMS.Framework.Utility.SerializationHelper.JsonDeserialize(System.Type,System.String)">
            <summary>
            将JSON数据转化为C#数据实体
            </summary>
            <param name="json">符合JSON格式的字符串</param>
            <returns>T类型的对象</returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringHelper.GetQuanPin(System.String)">
            <summary>
            获取中文全拼
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.StringUtil">
            <summary>
            字符串操作工具集
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.Remove(System.String,System.String)">
            <summary>
            从字符串中的尾部删除指定的字符串
            </summary>
            <param name="sourceString"></param>
            <param name="removedString"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.RightSplit(System.String,System.Char)">
            <summary>
            获取拆分符右边的字符串
            </summary>
            <param name="sourceString"></param>
            <param name="splitChar"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.LeftSplit(System.String,System.Char)">
            <summary>
            获取拆分符左边的字符串
            </summary>
            <param name="sourceString"></param>
            <param name="splitChar"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.DelLastComma(System.String)">
            <summary>
            去掉最后一个逗号
            </summary>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.DeleteUnVisibleChar(System.String)">
            <summary>
            删除不可见字符
            </summary>
            <param name="sourceString"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.GetArrayString(System.String[])">
            <summary>
            获取数组元素的合并字符串
            </summary>
            <param name="stringArray"></param>
            <returns></returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.GetStringCount(System.String[],System.String)">
            <summary>
            	获取某一字符串在字符串数组中出现的次数
            </summary>
            <param name="stringArray" type="string[]">
                <para>
                    
                </para>
            </param>
            <param name="findString" type="string">
                <para>
                    
                </para>
            </param>
            <returns>
                A int value...
            </returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.GetStringCount(System.String,System.String)">
            <summary>
                获取某一字符串在字符串中出现的次数
            </summary>
            <param name="stringArray" type="string">
                <para>
                    原字符串
                </para>
            </param>
            <param name="findString" type="string">
                <para>
                    匹配字符串
                </para>
            </param>
            <returns>
                匹配字符串数量
            </returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.GetSubString(System.String,System.String)">
            <summary>
            截取从startString开始到原字符串结尾的所有字符   
            </summary>
            <param name="sourceString" type="string">
                <para>
                    
                </para>
            </param>
            <param name="startString" type="string">
                <para>
                    
                </para>
            </param>
            <returns>
                A string value...
            </returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.GetByteCount(System.String)">
            <summary>
            按字节数取出字符串的长度
            </summary>
            <param name="strTmp">要计算的字符串</param>
            <returns>字符串的字节数</returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.GetByteIndex(System.Int32,System.String)">
            <summary>
            按字节数要在字符串的位置
            </summary>
            <param name="intIns">字符串的位置</param>
            <param name="strTmp">要计算的字符串</param>
            <returns>字节的位置</returns>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.CutString(System.String,System.Int32)">
            <summary>
            从包含中英文的字符串中截取固定长度的一段，inputString为传入字符串，len为截取长度（一个汉字占两个位）。
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.CutString(System.String,System.Int32,System.String)">
            <summary>
            从包含中英文的字符串中截取固定长度的一段，inputString为传入字符串，len为截取长度（一个汉字占两个位）。
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.RemoveHtml(System.String)">
            <summary>
            去除文本中的html代码。
            </summary>
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.ToSBC(System.String)">
             <summary>
             半角转全角(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>        
        </member>
        <member name="M:GMS.Framework.Utility.StringUtil.ToDBC(System.String)">
             <summary>
             全角转半角(DBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCodeType">
            <summary>
            图片验证码抽象类
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style1">
            <summary>
            线条干扰(蓝色)
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style10">
            <summary>
            线条干扰(彩色) 
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style11">
            <summary>
            GIF闪烁动画(彩色)
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style12">
            <summary>
            中文(彩色)  
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style13">
            <summary>
            字体旋转(简单) 
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style14">
            <summary>
            2年级算术(彩色)
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style2">
            <summary>
            噪点干扰(蓝色)
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style3">
            <summary>
            GIF颠簸动画
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style4">
            <summary>
            线条干扰(蓝色)
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style5">
            <summary>
            GIF闪烁动画(蓝色)   
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style6">
            <summary>
            噪点干扰(扭曲) 
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style7">
            <summary>
            中文(蓝色)
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style8">
            <summary>
            2年级算术(蓝色) 
            </summary>
        </member>
        <member name="T:GMS.Framework.Utility.ValidateCode_Style9">
            <summary>
            噪点干扰(彩色)
            </summary>
        </member>
    </members>
</doc>
